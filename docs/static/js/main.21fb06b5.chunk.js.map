{"version":3,"sources":["components/AddCategory.js","components/helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","SetInputValue","onSubmit","e","preventDefault","trim","length","cats","console","log","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAqBhD,OACO,uBAAMC,SAZQ,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,IACdO,QAAQC,IAAI,kBAMZ,UACI,+BAAKT,EAAL,OACD,uBACKU,KAAK,OACLC,MAASX,EACTY,SAnBW,SAAC,GAAD,IAAaD,EAAb,EAAGE,OAAUF,MAAb,OAA2BV,EAAcU,UAwBpEd,EAAYiB,UAAY,CACpBhB,c,OAAeiB,EAAUC,KAAKC,Y,mCCnCrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,yDAE4CC,UAAWH,GAFvD,uDAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACZC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVnB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OADAb,QAAQC,IAAIqB,EAAKC,EAAQV,GAErB,sBAAKc,UAAU,wCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,8BAAIA,EAAJ,WCFCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZpB,mBAAS,CAC/B2B,KAAK,GACLa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoBtC,OAbAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GAGfH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAKtB,CAACpB,IAEIqB,EDduBK,CAAa1B,GAA/Ba,EAJuB,EAI5BN,KAAYa,EAJgB,EAIhBA,QASnB,OACI,qCACA,qBAAIJ,UAAU,qCAAd,cAAqDhB,EAArD,OAEDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACV,qBAAKA,UAAU,YAAf,SAGYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADGA,EAAIC,aEzBtBgB,EAAe,WAAO,IAAD,EAEE/C,mBAAS,CAAC,cAFZ,mBAE3BgD,EAF2B,KAEfjD,EAFe,KAS9B,OACJ,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAE9B,uBAGA,6BAEQiD,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAYA,GADPA,Y,MClBjB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.21fb06b5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setcategories} ) => {\r\n\r\n const [inputValue, SetInputValue] = useState('')\r\n   \r\n //const handleInputChange = (e) => {\r\n //    SetInputValue(e.target.value);   \r\n //}\r\n\r\n const handleInputChange = ({ target: { value } }) => SetInputValue(value);\r\n\r\n const handleSubmit = (e) =>{\r\n     e.preventDefault();\r\n\r\n     if(inputValue.trim().length > 0){\r\n        setcategories(cats => [inputValue,...cats]); \r\n        SetInputValue('');\r\n        console.log('Submit Hecho')\r\n     }\r\n     \r\n\r\n }\r\n return (\r\n        <form onSubmit={handleSubmit} >\r\n            <h1>{inputValue} </h1>\r\n           <input\r\n                type=\"text\"\r\n                value = {inputValue}\r\n                onChange={handleInputChange}\r\n                />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.prototype = {\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=6&q=${ encodeURI( category )} &api_key=C4qXnZggeyADgsYsrr9eg2UsJydW6EGE`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    console.log(id , title , url);\r\n    return (\r\n        <div className=\"card animate__animated animate__jello\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n//import { getGifs } from './helpers/getGifs';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n   // const [images, setimages] = useState([]);\r\n   \r\n    const {data:images,loading} = useFetchGifs(category);\r\n    //useEffect(() => {\r\n    //    getGifs(category).then(setimages);\r\n    //}, [category])\r\n\r\n    \r\n\r\n    //getGifs();\r\n\r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__fade_In'> {category} </h3>\r\n\r\n      {loading && <p className='animate__animated animate__flash'>loading</p>}\r\n        <div className='card-grid' >\r\n            \r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem \r\n                        key = {img.id}\r\n                        {...img}\r\n                        />\r\n                    ))\r\n                }\r\n        </div>\r\n        </>        \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../components/helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n \r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() =>{\r\n        getGifs(category).then(imgs => {\r\n\r\n  \r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n   \r\n\r\n        })\r\n    },[category])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\nconst [categories, setcategories] = useState(['One Punch']);\r\n\r\n//const handleAdd = () => {\r\n      //  setcategories ([...categories, 'HxH']);   \r\n//    setcategories(cats => [...cats,'HXH']);\r\n//    };\r\n\r\n    return (\r\n<>\r\n<h2>GifExpertApp</h2>\r\n<AddCategory setcategories ={ setcategories } />\r\n\r\n<hr />\r\n\r\n\r\n<ol>\r\n    {\r\n        categories.map( category => (\r\n            <GifGrid\r\n            key={category} \r\n            category = {category} />\r\n        ))\r\n    }\r\n</ol>\r\n</>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}